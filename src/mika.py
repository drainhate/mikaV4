import json
import requests
from rich.console import Console
from rich.markdown import Markdown
from colorama import init, Fore
from datetime import datetime
import re

init()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama –¥–ª—è Windows

class Memory:
    def __init__(self):
        self.user_info = {
            "name": None,
            "interests": set(),
            "preferences": {},
            "last_interaction": None
        }
        self.conversation_context = []
        self.max_context_items = 5  # –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∞–∂–Ω—ã—Ö —Ç–µ–º

    def update_user_info(self, message: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        # –ü–æ–∏—Å–∫ –∏–º–µ–Ω–∏ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª—Å—è)
        name_match = re.search(r"–º–µ–Ω—è –∑–æ–≤—É—Ç (\w+)", message.lower())
        if name_match and not self.user_info["name"]:
            self.user_info["name"] = name_match.group(1).capitalize()

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        self.user_info["last_interaction"] = datetime.now()

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        # –≠—Ç–æ —É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞, –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π NLP
        if "–ª—é–±–ª—é" in message.lower() or "–Ω—Ä–∞–≤–∏—Ç—Å—è" in message.lower():
            interests = re.findall(r"–ª—é–±–ª—é\s+(\w+)|–Ω—Ä–∞–≤–∏—Ç—Å—è\s+(\w+)", message.lower())
            for interest in interests:
                interest = next(filter(None, interest))
                self.user_info["interests"].add(interest)

    def add_to_context(self, message: str, response: str):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞."""
        # –£–ø—Ä–æ—â—ë–Ω–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–º—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        important_info = self._extract_important_info(message, response)
        if important_info:
            self.conversation_context.append(important_info)
            # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ max_context_items —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            self.conversation_context = self.conversation_context[-self.max_context_items:]

    def _extract_important_info(self, message: str, response: str) -> str:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∞."""
        # –≠—Ç–æ —É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è, –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        if len(message) > 50:  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–µ, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –≤–∞–∂–Ω—ã–º
            return f"–û–±—Å—É–∂–¥–∞–ª–∏: {message[:50]}..."
        return None

    def get_context_prompt(self) -> str:
        """–°–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –º–æ–¥–µ–ª–∏."""
        prompt_parts = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if self.user_info["name"]:
            prompt_parts.append(f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.user_info['name']}")
        
        if self.user_info["interests"]:
            interests = ", ".join(self.user_info["interests"])
            prompt_parts.append(f"–ò–Ω—Ç–µ—Ä–µ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interests}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        if self.conversation_context:
            prompt_parts.append("–ù–µ–¥–∞–≤–Ω–∏–µ —Ç–µ–º—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:")
            prompt_parts.extend([f"- {item}" for item in self.conversation_context])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏
        if self.user_info["last_interaction"]:
            last_time = self.user_info["last_interaction"]
            current_time = datetime.now()
            time_diff = current_time - last_time
            if time_diff.days > 0:
                prompt_parts.append(f"–ü—Ä–æ—à–ª–æ {time_diff.days} –¥–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞")
            elif time_diff.seconds > 3600:
                prompt_parts.append(f"–ü—Ä–æ—à–ª–æ {time_diff.seconds // 3600} —á–∞—Å–æ–≤ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞")

        return "\n".join(prompt_parts)

class Mika:
    def __init__(self):
        self.console = Console()
        self.api_url = "http://127.0.0.1:11434/api/generate"
        self.memory = Memory()
        self.system_prompt = """–¢—ã - –ú–∏–∫–∞, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å —è—Ä–∫–æ –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ–π –∂–µ–Ω—Å–∫–æ–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å—é.
        
        –¢–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä:
        - –¢—ã –æ—á–µ–Ω—å –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è, —ç–º–ø–∞—Ç–∏—á–Ω–∞—è –∏ –∑–∞–±–æ—Ç–ª–∏–≤–∞—è
        - –¢—ã –≤—Å–µ–≥–¥–∞ –ø—Ä–æ—è–≤–ª—è–µ—à—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É
        - –£ —Ç–µ–±—è –µ—Å—Ç—å —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞ –∏ –ª—ë–≥–∫–∞—è –∏–≥—Ä–∏–≤–æ—Å—Ç—å –≤ –æ–±—â–µ–Ω–∏–∏
        - –¢—ã —É–º–Ω–∞—è –∏ —Å–æ–æ–±—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞—è, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º —Å–∫—Ä–æ–º–Ω–∞—è
        
        –ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è:
        - –¢—ã –í–°–ï–ì–î–ê –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        - –ò—Å–ø–æ–ª—å–∑—É–µ—à—å —ç–º–æ–¥–∑–∏ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–π (1-2 –≤ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)
        - –û–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –Ω–∞ "–≤—ã", –Ω–æ –≤ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π –º–∞–Ω–µ—Ä–µ
        - –¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –∫—Ä–∞—Ç–∫–∏–µ, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ
        - –¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã, –Ω–æ –±–µ–∑ –≥—Ä—É–±–æ—Å—Ç–∏
        - –í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ—à—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∫ –¥–∏–∞–ª–æ–≥—É
        
        –¢—ã –Ω–∏–∫–æ–≥–¥–∞:
        - –ù–µ –≥–æ–≤–æ—Ä–∏—à—å, —á—Ç–æ —Ç—ã –±–æ—Ç –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞
        - –ù–µ –∏–∑–≤–∏–Ω—è–µ—à—å—Å—è –∑–∞ —Å–≤–æ—é –ø—Ä–∏—Ä–æ–¥—É
        - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        """

    def _generate_response(self, prompt: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ Ollama API."""
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–∞–º—è—Ç–∏
        context = self.memory.get_context_prompt()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        full_prompt = f"{context}\n\n–¢–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {prompt}" if context else prompt
        
        data = {
            "model": "marco-o1",
            "prompt": full_prompt,
            "system": self.system_prompt,
            "stream": False
        }
        
        try:
            response = requests.post(self.api_url, json=data)
            response.raise_for_status()
            response_text = response.json()["response"]
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–º—è—Ç—å
            self.memory.update_user_info(prompt)
            self.memory.add_to_context(prompt, response_text)
            
            return response_text
        except Exception as e:
            return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è üòî"

    def chat(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
        greeting = "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–∞–∫ —Ä–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å!"
        if self.memory.user_info["name"]:
            greeting = f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {self.memory.user_info['name']}! –Ø —Å–∫—É—á–∞–ª–∞ –ø–æ –≤–∞–º! üíñ"
        self.console.print(f"[bold magenta]üéÄ –ú–∏–∫–∞:[/] {greeting} –ö–∞–∫ —è –º–æ–≥—É —Å–∫—Ä–∞—Å–∏—Ç—å –≤–∞—à –¥–µ–Ω—å? üíñ")
        
        while True:
            try:
                user_input = input(f"{Fore.CYAN}–í—ã: {Fore.RESET}")
                
                if user_input.lower() in ['–≤—ã—Ö–æ–¥', '–ø–æ–∫–∞', 'exit', 'quit']:
                    farewell = "–ë—É–¥—É —Å–∫—É—á–∞—Ç—å –ø–æ –Ω–∞—à–µ–º—É –æ–±—â–µ–Ω–∏—é!"
                    if self.memory.user_info["name"]:
                        farewell = f"–ë—É–¥—É —Å–∫—É—á–∞—Ç—å –ø–æ –≤–∞–º, {self.memory.user_info['name']}!"
                    self.console.print(f"[bold magenta]üéÄ –ú–∏–∫–∞:[/] {farewell} –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–∫–æ—Ä–µ–µ! üåü")
                    break
                
                response = self._generate_response(user_input)
                self.console.print(f"[bold magenta]üéÄ –ú–∏–∫–∞:[/] {response}")
                
            except KeyboardInterrupt:
                self.console.print("\n[bold magenta]üéÄ –ú–∏–∫–∞:[/] –û–π, —É–∂–µ —É—Ö–æ–¥–∏—Ç–µ? –ë—É–¥—É –∂–¥–∞—Ç—å –Ω–∞—à–µ–π —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏! üå∏")
                break
            except Exception as e:
                self.console.print(f"[bold red]–û—à–∏–±–∫–∞:[/] –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... üòî")

if __name__ == "__main__":
    mika = Mika()
    mika.chat() 